extends layout.pug

block content 
    nav.navbar.navbar-expand-lg.navbar-dark.bg-dark
        .container-fluid
            a.navbar-brand(href='/')
                img.img-fluid(src="/logo.png", alt='Logo', width='50')
                |   Gymbuds
            button.navbar-toggler(type='button', data-bs-toggle='collapse', data-bs-target='#navbarSupportedContent', aria-controls='navbarSupportedContent', aria-expanded='false', aria-label='Toggle navigation')
                span.navbar-toggler-icon
            #navbarSupportedContent.collapse.navbar-collapse
                ul.navbar-nav.me-auto.mb-2.mb-lg-0
                    if user
                        li.nav-item
                            a.nav-link(href='/dashboard') Dashboard 
                ul.navbar-nav
                    if user
                        li.nav-item.dropdown
                            a.nav-link(class="btn dropdown-toggle", data-bs-toggle="dropdown", aria-haspopup="true", aria-expanded="true")
                                i(class="bi bi-person-circle profile-icon")
                            ul.dropdown-menu.dropdown-menu-end(aria-labelledby="dropdownMenuButton")
                                li 
                                    .dropdown-item.dropdown-header(style="text-align: center; color: #000;") #{user.first_name} #{user.last_name}
                                div.dropdown-divider
                                li 
                                    a.dropdown-item(href="/profile")
                                        i(class="bi bi-gear-fill" style="font-style: normal")  Profile Settings
                                li 
                                    a.dropdown-item(href="/logout") 
                                        i(class="bi bi-box-arrow-right" style="font-style: normal")  Logout
                    else
                        li.nav-item
                            a.nav-link(href='/login') Login

    //These are some hidden inputs in order to pass the main and accessory counts into the script.
    input(type="hidden", name="m_count", id="m_count", value=m_count)
    input(type="hidden", name="a_count", id="a_count", value=a_count)

    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js")
    script.
        var mainRowCount = $('#m_count').val();
        var accessoryRowCount = $("#a_count").val();
        //- Main lift rows addition
        $(document).ready(function() {
            $("#addMainRowButton").click(function() {
                //Clones the target row
                var $row = $('#mainRow').clone();
                mainRowCount++;
                console.log(mainRowCount);

                var $rowCount = $('#mainRowContainer .row').length; 

                //This function makes sure the exercise selection ids maintain uniqueness
                $row.find('select[name="m_exercise_dropdown"]').each(function(){
                    var currentName = $(this).attr('name')
                    $(this).attr('name', (currentName + $rowCount))
                    $(this).attr('id', (currentName + $rowCount))
                })

                //This function makes sure the form input ids maintain uniqueness (reps, sets, weight)
                $row.find('input').each(function() {
                    var currentName = $(this).attr('name');
                    $(this).attr('name', (currentName + $rowCount))

                    if($(this).attr('id') === `m_exercise_id`){
                        $(this).attr('value', 'null');
                    } else {
                        $(this).attr('id', (currentName + $rowCount))
                    }
                })

                //Clears the text boxes on the cloned row
                $row.find(":text").val("");

                //Appends the targeted row to the overbearing container
                $("#mainRowContainer").append($row);
            });
        });

        //- Accesory lift rows addition
        $(document).ready(function() {
            $("#addAccessoryRowButton").click(function() {
                //Clones the target row
                var $row = $('#accessoryRow').clone();
                accessoryRowCount++;
                console.log(accessoryRowCount);

                var $rowCount = $('#accessoryRowContainer .row').length; 

                //This function makes sure the exercise selection ids maintain uniqueness
                $row.find('select[name="a_exercise_dropdown"]').each(function(){
                    var currentName = $(this).attr('name')
                    $(this).attr('name', (currentName + $rowCount))
                    $(this).attr('id', (currentName + $rowCount))
                })

                //This function makes sure the form input ids maintain uniqueness (reps, sets, weight)
                $row.find('input').each(function() {
                    var currentName = $(this).attr('name');
                    $(this).attr('name', (currentName + $rowCount))
                    $(this).attr('id', (currentName + $rowCount))
                })

                //Clears the text boxes on the cloned row
                $row.find(":text").val("");

                //Appends the targeted row to the overbearing container
                $("#accessoryRowContainer").append($row);
            });
        });

        //- Main lift rows deletion
        $(document).ready(function() {
            $('#removeMainRowButton').click(function(){
                if(mainRowCount > 1){
                    mainRowCount--;
                    console.log(mainRowCount);
                }

                //Check the count of rows
                var rowCount = $('#mainRowContainer .row').length;

                //This ensures that there is always at least one row to copy for the addition.+
                if(rowCount >= 2){
                    //Removes the latest row
                    $('#mainRowContainer .row:last').remove();
                }
            });
        });

        //- Accesory lift rows deletion
        $(document).ready(function() {
            $('#removeAccessoryRowButton').click(function(){
                if(accessoryRowCount > 1){
                    accessoryRowCount--;
                    console.log(accessoryRowCount);
                }

                //Check the count of rows
                var rowCount = $('#accessoryRowContainer .row').length;

                //This ensures that there is always at least one row to copy for the addition
                if(rowCount >= 2){
                    //Removes the latest row
                    $('#accessoryRowContainer .row:last').remove();
                }
            });
        });

        //- This function passes the row counts when the page is submitted
        $(document).ready(function() {
            $('#postForm').submit(function(){
                $('#mainRowCount').val(mainRowCount);
                $('#accessoryRowCount').val(accessoryRowCount);
            })
        })

    body
        .container 
            form(id='postForm', action=`/workouts/:id`, method='post').form
                .row-justify-content-center.mt-4 
                    .col-justfiy-content-center.md-6 
                        .card.mains-card 
                            .card-header 
                                h4.card-title Main Lifts 
                            .card-body
                                .container(id='mainRowContainer')
                                    - var rowCount = 0
                                    - var first_row = ''
                                    - var temp
                                    each userExercise in userExercises
                                        if userExercise.classification == 'Main'
                                            if rowCount === 0
                                                - temp = rowCount 
                                                - rowCount = first_row
                                            .row(id='mainRow')
                                                if userExercise.id != null 
                                                    input(type="hidden", name=`m_exercise_id${rowCount}`, id='m_exercise_id' value=userExercise.id)
                                                .col
                                                    label(for='exercise') Select Exercise: 
                                                    select(name=`m_exercise_dropdown${rowCount}`, id=`m_exercise_dropdown${rowCount}`, class='scrollable-dropdown')
                                                        each exercise in exercises
                                                            if exercise.classification == 'Main'
                                                                if exercise.name == userExercise.exercise_name
                                                                    option(value=exercise.name, selected)= exercise.name 
                                                                else 
                                                                    option(value=exercise.name)= exercise.name
                                                .col
                                                    label(for='sets') Set Count:
                                                    input.form-control(type='text', value=userExercise.sets, placeholder="Ex. 2", name=`m_sets${rowCount}`, id=`m_sets${rowCount}`)
                                                .col
                                                    label(for='reps') Rep Count:
                                                    input.form-control(type='text', value=userExercise.reps, placeholder="Ex. 5", name=`m_reps${rowCount}`, id=`m_reps${rowCount}`)
                                                .col
                                                    label(for='weight') Weight (lbs):
                                                    input.form-control(type='text', value=userExercise.weight, placeholder="Ex. 225", name=`m_weight${rowCount}`, id=`m_weight${rowCount}`)
                                                p
                                                hr
                                            if temp === 0
                                                - rowCount = 1
                                                - temp = 'null'
                                            else
                                                - rowCount++

                                .row
                                    .col
                                        button(type="button", id='addMainRowButton' class="btn btn-success btn-block") Add Another Main
                                    .col-auto 
                                        button(type="button", id='removeMainRowButton', class="btn btn-danger btn-block") Delete Last Row
                .row-justify-content-center.mt-4 
                    .col-justfiy-content-center.md-6 
                        .card.accesory-card 
                            .card-header 
                                h4.card-title Accessories 
                            .card-body 
                                .container(id='accessoryRowContainer')
                                    - var a_rowCount = 0
                                    - var a_first_row = ''
                                    - var temp1
                                    each userExercise in userExercises 
                                        if a_rowCount === 0
                                            - temp1 = a_rowCount 
                                            - a_rowCount = a_first_row
                                        if userExercise.classification == 'Accessory'
                                            .row(id='accessoryRow')
                                                if userExercise.id != null 
                                                    input(type="hidden", name=`a_exercise_id${a_rowCount}`, id='a_exercise_id' value=userExercise.id)
                                                .col
                                                    label(for='exercise') Select Exercise: 
                                                    select(name=`a_exercise_dropdown${a_rowCount}`, id=`a_exercise_dropdown${a_rowCount}`, class='scrollable-dropdown')
                                                        each exercise in exercises
                                                            if exercise.classification == 'Accessory'
                                                                if exercise.name == userExercise.exercise_name
                                                                    option(value=exercise.name, selected)= exercise.name 
                                                                else 
                                                                    option(value=exercise.name)= exercise.name
                                                .col
                                                    label(for='sets') Set Count:
                                                    input.form-control(type='text', value=userExercise.sets, placeholder="Ex. 2", name=`a_sets${a_rowCount}`, id=`a_sets${a_rowCount}`)
                                                .col
                                                    label(for='reps') Rep Count:
                                                    input.form-control(type='text', value=userExercise.reps, placeholder="Ex. 5", name=`a_reps${a_rowCount}`, id=`a_reps${a_rowCount}`)
                                                .col
                                                    label(for='weight') Weight (lbs):
                                                    input.form-control(type='text', value=userExercise.weight, placeholder="Ex. 225", name=`a_weight${a_rowCount}`, id=`a_weight${a_rowCount}`)
                                                p
                                                hr
                                            if temp1 === 0
                                                - a_rowCount = 1
                                                - temp1 = 'null'
                                            else 
                                                - a_rowCount++

                                .row
                                    .col
                                        button(type="button", id='addAccessoryRowButton' class="btn btn-success btn-block") Add Another Accessory
                                    .col-auto 
                                        button(type="button", id='removeAccessoryRowButton', class="btn btn-danger btn-block") Delete Last Row
                .row
                    .col-md-6
                        .card.my-4
                            .card-header 
                                h4.card-title Time Spent 
                            .card-body
                                .container(id='timeLoggingContainer')
                                    .col
                                        .row
                                            .col-md-4.text-center
                                                label(for='startTime') Time Started 
                                                input.form-control(type='time', id='startTime', name='startTime', value=startTime, required)
                                            .col-md-4.text-center
                                                label(for='endTime') Time Ended 
                                                input.form-control(type='time', id='endTime', name='endTime', value=endTime, required)
                    .col-md-6
                        .card.my-4
                            .card-header 
                                h4.card-title Alter Workout
                            .card-body
                                .container-submissionContainer
                                    .row
                                        .col
                                            a(type="button", href='/dashboard' id="cancelButton", class="btn btn-danger btn-block") CANCEL
                                        .col-auto
                                            input(type="hidden", name="mainRowCount", id="mainRowCount")
                                            input(type="hidden", name="accessoryRowCount", id="accessoryRowCount")
                                            input(type="hidden", name="workoutId", value=workout.id)
                                            button(type="submit", class="btn btn-info btn-block") Save Workout
